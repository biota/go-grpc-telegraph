// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: wire.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Origin of species - where did you come from?
type Origin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       *Address               `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Producer      *Producer              `protobuf:"bytes,2,opt,name=producer,proto3" json:"producer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Origin) Reset() {
	*x = Origin{}
	mi := &file_wire_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Origin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Origin) ProtoMessage() {}

func (x *Origin) ProtoReflect() protoreflect.Message {
	mi := &file_wire_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Origin.ProtoReflect.Descriptor instead.
func (*Origin) Descriptor() ([]byte, []int) {
	return file_wire_proto_rawDescGZIP(), []int{0}
}

func (x *Origin) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Origin) GetProducer() *Producer {
	if x != nil {
		return x.Producer
	}
	return nil
}

// Destiny's child - where will you go!
type Destination struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       *Address               `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Recipient     *Tag                   `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Destination) Reset() {
	*x = Destination{}
	mi := &file_wire_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Destination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Destination) ProtoMessage() {}

func (x *Destination) ProtoReflect() protoreflect.Message {
	mi := &file_wire_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Destination.ProtoReflect.Descriptor instead.
func (*Destination) Descriptor() ([]byte, []int) {
	return file_wire_proto_rawDescGZIP(), []int{1}
}

func (x *Destination) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Destination) GetRecipient() *Tag {
	if x != nil {
		return x.Recipient
	}
	return nil
}

// Routing information.
type Route struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ho[o]ps we went through!
	// Note: repeated fields are inherently optional.
	Hops          []*Address `protobuf:"bytes,1,rep,name=hops,proto3" json:"hops,omitempty"`
	Labels        []*Tag     `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Route) Reset() {
	*x = Route{}
	mi := &file_wire_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_wire_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_wire_proto_rawDescGZIP(), []int{2}
}

func (x *Route) GetHops() []*Address {
	if x != nil {
		return x.Hops
	}
	return nil
}

func (x *Route) GetLabels() []*Tag {
	if x != nil {
		return x.Labels
	}
	return nil
}

// Telegraph postmark.
type Postmark struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tag           *Tag                   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"` // Unique local tracking id (can use for retries).
	When          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=when,proto3" json:"when,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Postmark) Reset() {
	*x = Postmark{}
	mi := &file_wire_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Postmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Postmark) ProtoMessage() {}

func (x *Postmark) ProtoReflect() protoreflect.Message {
	mi := &file_wire_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Postmark.ProtoReflect.Descriptor instead.
func (*Postmark) Descriptor() ([]byte, []int) {
	return file_wire_proto_rawDescGZIP(), []int{3}
}

func (x *Postmark) GetTag() *Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *Postmark) GetWhen() *timestamppb.Timestamp {
	if x != nil {
		return x.When
	}
	return nil
}

// Telegraph envelope - let's not get to soapy here!
type Envelope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Postmark      *Postmark              `protobuf:"bytes,1,opt,name=postmark,proto3" json:"postmark,omitempty"` // Yeah, postal service-ish ...
	Origin        *Origin                `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination   *Destination           `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	Routing       *Route                 `protobuf:"bytes,4,opt,name=routing,proto3" json:"routing,omitempty"`
	Fields        *Fields                `protobuf:"bytes,5,opt,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_wire_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_wire_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_wire_proto_rawDescGZIP(), []int{4}
}

func (x *Envelope) GetPostmark() *Postmark {
	if x != nil {
		return x.Postmark
	}
	return nil
}

func (x *Envelope) GetOrigin() *Origin {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *Envelope) GetDestination() *Destination {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *Envelope) GetRouting() *Route {
	if x != nil {
		return x.Routing
	}
	return nil
}

func (x *Envelope) GetFields() *Fields {
	if x != nil {
		return x.Fields
	}
	return nil
}

var File_wire_proto protoreflect.FileDescriptor

var file_wire_proto_rawDesc = string([]byte{
	0x0a, 0x0a, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x7d, 0x0a, 0x06, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x37, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x3a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x22, 0x7f,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x54, 0x61, 0x67, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x22,
	0x6d, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x68, 0x6f, 0x70, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x04, 0x68, 0x6f, 0x70, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x67,
	0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x54,
	0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x2e, 0x0a, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x22, 0xae, 0x02, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x34, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x43, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x07, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6d, 0x72, 0x2f, 0x67, 0x6f, 0x2d, 0x67,
	0x72, 0x70, 0x63, 0x2d, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_wire_proto_rawDescOnce sync.Once
	file_wire_proto_rawDescData []byte
)

func file_wire_proto_rawDescGZIP() []byte {
	file_wire_proto_rawDescOnce.Do(func() {
		file_wire_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wire_proto_rawDesc), len(file_wire_proto_rawDesc)))
	})
	return file_wire_proto_rawDescData
}

var file_wire_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_wire_proto_goTypes = []any{
	(*Origin)(nil),                // 0: local.grpc.telegraph.Origin
	(*Destination)(nil),           // 1: local.grpc.telegraph.Destination
	(*Route)(nil),                 // 2: local.grpc.telegraph.Route
	(*Postmark)(nil),              // 3: local.grpc.telegraph.Postmark
	(*Envelope)(nil),              // 4: local.grpc.telegraph.Envelope
	(*Address)(nil),               // 5: local.grpc.telegraph.Address
	(*Producer)(nil),              // 6: local.grpc.telegraph.Producer
	(*Tag)(nil),                   // 7: local.grpc.telegraph.Tag
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
	(*Fields)(nil),                // 9: local.grpc.telegraph.Fields
}
var file_wire_proto_depIdxs = []int32{
	5,  // 0: local.grpc.telegraph.Origin.address:type_name -> local.grpc.telegraph.Address
	6,  // 1: local.grpc.telegraph.Origin.producer:type_name -> local.grpc.telegraph.Producer
	5,  // 2: local.grpc.telegraph.Destination.address:type_name -> local.grpc.telegraph.Address
	7,  // 3: local.grpc.telegraph.Destination.recipient:type_name -> local.grpc.telegraph.Tag
	5,  // 4: local.grpc.telegraph.Route.hops:type_name -> local.grpc.telegraph.Address
	7,  // 5: local.grpc.telegraph.Route.labels:type_name -> local.grpc.telegraph.Tag
	7,  // 6: local.grpc.telegraph.Postmark.tag:type_name -> local.grpc.telegraph.Tag
	8,  // 7: local.grpc.telegraph.Postmark.when:type_name -> google.protobuf.Timestamp
	3,  // 8: local.grpc.telegraph.Envelope.postmark:type_name -> local.grpc.telegraph.Postmark
	0,  // 9: local.grpc.telegraph.Envelope.origin:type_name -> local.grpc.telegraph.Origin
	1,  // 10: local.grpc.telegraph.Envelope.destination:type_name -> local.grpc.telegraph.Destination
	2,  // 11: local.grpc.telegraph.Envelope.routing:type_name -> local.grpc.telegraph.Route
	9,  // 12: local.grpc.telegraph.Envelope.fields:type_name -> local.grpc.telegraph.Fields
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_wire_proto_init() }
func file_wire_proto_init() {
	if File_wire_proto != nil {
		return
	}
	file_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wire_proto_rawDesc), len(file_wire_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wire_proto_goTypes,
		DependencyIndexes: file_wire_proto_depIdxs,
		MessageInfos:      file_wire_proto_msgTypes,
	}.Build()
	File_wire_proto = out.File
	file_wire_proto_goTypes = nil
	file_wire_proto_depIdxs = nil
}
